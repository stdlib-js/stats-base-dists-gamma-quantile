{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport gammaincinv from '@stdlib/math-base-special-gammaincinv';\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a gamma distribution with shape parameter `alpha` and rate parameter `beta` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {NonNegativeNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - rate parameter\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 2.0, 1.0 );\n* // returns ~2.994\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~1.836\n*\n* @example\n* var y = quantile( 1.1, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* // Non-positive shape parameter:\n* var y = quantile( 0.5, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* // Non-positive rate parameter:\n* var y = quantile( 0.5, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\tisnan( p ) ||\n\t\talpha < 0.0 ||\n\t\tbeta <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( alpha === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn ( 1.0 / beta ) * gammaincinv( p, alpha );\n}\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport gammaincinv from '@stdlib/math-base-special-gammaincinv';\nimport { factory as degenerate } from '@stdlib/stats-base-dists-degenerate-quantile';\nimport isnan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a gamma distribution with shape parameter `alpha` and rate parameter `beta`.\n*\n* @param {NonNegativeNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - rate parameter\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 2.5, 0.5 );\n* var y = quantile( 0.5 );\n* // returns ~4.351\n*\n* y = quantile( 0.8 );\n* // returns ~7.289\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha < 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( alpha === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a gamma distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn ( 1.0 / beta ) * gammaincinv( p, alpha );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Gamma distribution quantile function.\n*\n* @module @stdlib/stats-base-dists-gamma-quantile\n*\n* @example\n* import quantile from '@stdlib/stats-base-dists-gamma-quantile';\n*\n* var y = quantile( 0.8, 1.0, 1.0 );\n* // returns ~1.609\n*\n* var myquantile = quantile.factory( 2.0, 2.0 );\n* y = myquantile( 0.8 );\n* // returns ~1.497\n*\n* y = myquantile( 0.4 );\n* // returns ~0.688\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["quantile","p","alpha","beta","isnan","NaN","gammaincinv","factory","constantFunction","degenerate","setReadOnly","main"],"mappings":";;2fA0EA,SAASA,EAAUC,EAAGC,EAAOC,GAC5B,OACCC,EAAOF,IACPE,EAAOD,IACPC,EAAOH,IACPC,EAAQ,GACRC,GAAQ,GACRF,EAAI,GACJA,EAAI,EAEGI,IAEO,IAAVH,EACG,EAEC,EAAMC,EAASG,EAAaL,EAAGC,EACzC,CC7CA,SAASK,EAASL,EAAOC,GACxB,OACCC,EAAOF,IACPE,EAAOD,IACPD,EAAQ,GACRC,GAAQ,EAEDK,EAAkBH,KAEX,IAAVH,EACGO,EAAY,GAepB,SAAmBR,GAClB,GAAKG,EAAOH,IAAOA,EAAI,GAAOA,EAAI,EACjC,OAAOI,IAER,OAAS,EAAMF,EAASG,EAAaL,EAAGC,EACxC,CACF,CC5BAQ,EAAAC,EAAA,UAAAJ"}